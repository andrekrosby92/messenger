{"version":3,"sources":["config.tsx","ChatRoomContext.tsx","ChatUser.tsx","UserContext.tsx","icons/send.svg","ChatRoom.tsx","Contacts.tsx","icons/plus.svg","Users.tsx","Sidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","window","location","href","includes","SOCKET_BASE_PATH","Cookies","get","ChatRoomContext","createContext","ChatRoomProvider","props","room","useParams","socket","WebSocket","Provider","value","children","ChatUser","useState","chatUser","setChatUser","useEffect","a","fetch","userId","method","headers","credentials","response","json","result","fetchUser","className","src","avatar","alt","full_name","UserContext","UserProvider","id","username","currentUser","setCurrentUser","fetchCurrentUser","ChatRoom","param","chatUserId","URLSearchParams","search","useContext","messages","setMessages","message","setMessage","chatRoomRef","useRef","chatRoom","current","scrollTo","scrollHeight","onopen","send","JSON","stringify","onmessage","e","data","parse","command","prev","onclose","console","error","close","ref","map","author","content","renderTimestamp","timestamp","type","onChange","target","onClick","timeDiff","Math","round","Date","getTime","Contacts","contacts","setContacts","fetchContacts","contact","to","Users","users","setUsers","fetchUsers","handleOnClick","body","reload","user","plus","Sidebar","sidebarTab","setSidebarTab","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cbac992.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\n\nexport const BASE_URL = (\n  window.location.href.includes('localhost') ?\n    'http://localhost:8000' :\n    'https://<APP>.herokuapp.com'\n)\n\nexport const SOCKET_BASE_PATH = (\n  window.location.href.includes('localhost') ?\n    'ws://localhost:8000' :\n    'wss://<APP>.herokuapp.com'\n)\n\nexport const CREDENTIALS = (\n  window.location.href.includes('localhost:3000') ?\n    'include' :\n    'same-origin'\n)\n\nexport const REQUEST_OPTIONS = {\n  credentials: CREDENTIALS,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'X-CSRFToken': Cookies.get('csrftoken')\n  },\n}","import React, { createContext } from 'react'\nimport { useParams } from 'react-router'\nimport { SOCKET_BASE_PATH } from './config';\n\nexport const ChatRoomContext = createContext<any>(null)\n\ninterface Params {\n  room: string;\n}\n\ninterface Props {\n  children: JSX.Element,\n}\n\nexport default function ChatRoomProvider(props: Props) {\n  const { room } = useParams<Params>()\n  const socket = new WebSocket(SOCKET_BASE_PATH + '/ws/chat/' + room + '/');\n\n  return (\n    <ChatRoomContext.Provider value={{ socket }}>\n      {props.children}\n    </ChatRoomContext.Provider>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { BASE_URL } from './config';\n\ninterface ChatUserState {\n  username: string;\n  full_name: string;\n  avatar: string;\n}\n\ninterface Props {\n  userId: string;\n}\n\nexport default function ChatUser(props: Props) {\n  const [chatUser, setChatUser] = useState<ChatUserState>()\n\n  useEffect(() => {\n    async function fetchUser() {\n      const response = await fetch(BASE_URL + '/users/' + props.userId, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken') || ''\n        },\n        credentials: 'include',\n      });\n\n      const result = await response.json()\n      setChatUser(result)\n    }\n\n    fetchUser()\n  }, [props.userId])\n\n  return (\n    <div className=\"chat-user\">\n      <img className=\"avatar\" src={chatUser?.avatar} alt=\"avatar\" />\n      {chatUser?.full_name}\n    </div>\n  )\n}\n","import React, { createContext, useState, useEffect } from 'react'\nimport Cookies from 'js-cookie';\nimport { BASE_URL } from './config';\n\ninterface User {\n  id: number;\n  username: string;\n  full_name: string;\n  avatar: string;\n}\n\nexport const UserContext = createContext<Partial<User>>({})\n\nexport default function UserProvider(props: any) {\n  const [currentUser, setCurrentUser] = useState<User>({\n    id: 0,\n    username: '',\n    full_name: '',\n    avatar: ''\n  })\n\n  useEffect(() => {\n    async function fetchCurrentUser() {\n      const response = await fetch(BASE_URL + '/current-user/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken') || ''\n        },\n        credentials: 'include',\n      });\n\n      const result = await response.json()\n      setCurrentUser(result)\n    }\n\n    fetchCurrentUser()\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ ...currentUser! }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/send.d8a7ff16.svg\";","import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { ChatRoomContext } from './ChatRoomContext'\nimport ChatUser from './ChatUser'\nimport { UserContext } from './UserContext'\nimport send from './icons/send.svg';\n\ninterface Messages {\n  id: number;\n  author: string;\n  content: string;\n  timestamp: string;\n}\n\nexport default function ChatRoom() {\n  const chatUserId = getURLParams('user_id');\n  const { socket } = useContext(ChatRoomContext)\n  const { username } = useContext(UserContext)\n  const [messages, setMessages] = useState<Messages[]>([])\n  const [message, setMessage] = useState('')\n\n  const chatRoomRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const chatRoom = chatRoomRef.current\n    chatRoom?.scrollTo(0, chatRoom.scrollHeight)\n  }, [messages])\n\n\n  useEffect(() => {\n    socket.onopen = () => {\n      socket.send(JSON.stringify({ 'command': 'fetch_messages' }));\n    }\n\n    socket.onmessage = (e: any) => {\n      const data = JSON.parse(e.data);\n\n      if (data.message.command === 'messages') {\n        setMessages(data.message.messages)\n      } else if (data.message.command === 'message') {\n        setMessages((prev: any) => [...prev, data.message.message]);\n      }\n    };\n\n    socket.onclose = function (e: any) {\n      console.error('Chat socket closed unexpectedly');\n    };\n\n    return () => socket?.close();\n  }, [socket]);\n\n\n\n  const handleOnClick = () => {\n    socket.send(JSON.stringify({\n      'message': message,\n      'command': 'new_message'\n    }));\n\n    setMessage('');\n  }\n\n  return (\n    <div className=\"chat\">\n      <ChatUser userId={chatUserId!} />\n      <div className=\"chat-room\" ref={chatRoomRef}>\n        {messages?.map(message => {\n          if (username === message.author) {\n            return (\n              <div key={message.id} className=\"message sender\">\n                <div className=\"text\">{message.content}</div>\n                <small className=\"timestamp\">{renderTimestamp(message.timestamp)}</small>\n              </div>\n            )\n          } else {\n            return (\n              <div key={message.id} className=\"message receiver\">\n                <div className=\"text\">{message.content}</div>\n                <small className=\"timestamp\">{renderTimestamp(message.timestamp)}</small>\n              </div>\n            )\n          }\n        })}\n      </div>\n      <div className=\"chat-message\">\n        <input\n          className=\"chat-message-input\"\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button className=\"chat-message-button\" onClick={handleOnClick}>\n          <img src={send} alt=\"send\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nfunction getURLParams(param: string) {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get(param);\n}\n\nfunction renderTimestamp(timestamp: string) {\n  let prefix = '';\n  const timeDiff = Math.round(\n    (new Date().getTime() - new Date(timestamp).getTime()) / 60000\n  );\n  if (timeDiff < 1) {\n    prefix = 'Just now';\n  } else if (timeDiff < 60 && timeDiff >= 1) {\n    prefix = `${timeDiff} minutes ago`;\n  } else if (timeDiff < 24 * 60 && timeDiff >= 60) {\n    prefix = `${Math.round(timeDiff / 60)} hours ago`;\n  } else if (timeDiff < 31 * 24 * 60 && timeDiff >= 24 * 60) {\n    prefix = `${Math.round(timeDiff / (60 * 24))} days ago`;\n  } else {\n    prefix = `${new Date(timestamp)}`;\n  }\n  return prefix;\n};","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { BASE_URL } from './config';\n\n\ninterface Contact {\n  id: number;\n  username: string;\n  full_name: string;\n  avatar: string;\n  room: string;\n}\n\nexport default function Contacts() {\n  const [contacts, setContacts] = useState<Contact[]>([])\n\n  useEffect(() => {\n    async function fetchContacts() {\n      const response = await fetch(BASE_URL + '/contacts/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken') || ''\n        },\n        credentials: 'include',\n      });\n\n      const result = await response.json()\n      setContacts(result.contacts)\n    }\n\n    fetchContacts()\n  }, []);\n\n  return (\n    <div>\n      {contacts?.map(contact => {\n        return (\n          <Link\n            key={contact.id}\n            className=\"sidebar-user contact\"\n            to={`/chat/${contact.room}?user_id=${contact.id}`}>\n            <img className=\"avatar\" src={contact.avatar} alt=\"avatar\" />\n            <div className=\"text\">\n              <div className=\"name\">{contact.full_name}</div>\n              <div className=\"last-message\">Last message</div>\n            </div>\n          </Link>\n        )\n      })}\n    </div >\n  );\n}\n","export default __webpack_public_path__ + \"static/media/plus.c9092a12.svg\";","import React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport plus from './icons/plus.svg';\nimport { BASE_URL } from './config';\n\ninterface User {\n  id: number;\n  username: string;\n  full_name: string;\n  avatar: string;\n}\n\nexport default function Users() {\n  const [users, setUsers] = useState<User[]>([])\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const response = await fetch(BASE_URL + '/users/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken') || ''\n        },\n        credentials: 'include',\n      });\n      const result = await response.json()\n\n      setUsers(result.users)\n    }\n\n    fetchUsers()\n  }, []);\n\n  const handleOnClick = async (userId: number) => {\n    await fetch(BASE_URL + '/add-contact/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken') || ''\n      },\n      credentials: 'include',\n      body: JSON.stringify({ 'user_id': userId })\n    });\n\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      {users?.map(user => {\n        return (\n          <div key={user.id} className=\"sidebar-user\">\n            <img className=\"avatar\" src={user.avatar} alt=\"avatar\" />\n            {user.full_name}\n            <button className=\"add-contact-button\" onClick={() => handleOnClick(user.id)}>\n              <img src={plus} alt=\"add-contact\" />\n            </button>\n          </div>\n        );\n      })}\n    </div >\n  );\n}\n","import { useContext, useState, Fragment } from \"react\";\nimport Contacts from \"./Contacts\";\nimport { UserContext } from \"./UserContext\";\nimport Users from \"./Users\";\n\nexport default function Sidebar() {\n  const { full_name, avatar } = useContext(UserContext)\n  const [sidebarTab, setSidebarTab] = useState('CONTACTS')\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"current-user\">\n        <img src={avatar} alt=\"user-avatar\" />\n        {full_name}\n      </div>\n      {sidebarTab === 'CONTACTS' && (\n        <Fragment>\n          <Contacts />\n          <button className=\"sidebar-button\" onClick={() => setSidebarTab('ADD_CONTACT')}>\n            Add contacts\n          </button>\n        </Fragment>\n      )}\n      {sidebarTab === 'ADD_CONTACT' && (\n        <Fragment>\n          <Users />\n          <button className=\"sidebar-button\" onClick={() => setSidebarTab('CONTACTS')}>\n            Back to contacts\n          </button>\n        </Fragment>\n      )}\n    </div>\n  )\n}\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ChatRoom from \"./ChatRoom\";\nimport ChatRoomProvider from \"./ChatRoomContext\";\nimport UserProvider from \"./UserContext\";\nimport Sidebar from \"./Sidebar\";\n\nexport default function App() {\n\n  return (\n    <Router>\n      <UserProvider>\n        <div className=\"app\">\n          <Sidebar />\n          <Switch>\n            <Route path=\"/chat/:room\">\n              <ChatRoomProvider>\n                <ChatRoom />\n              </ChatRoomProvider>\n            </Route>\n          </Switch>\n        </div>\n      </UserProvider>\n    </Router>\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './_index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}